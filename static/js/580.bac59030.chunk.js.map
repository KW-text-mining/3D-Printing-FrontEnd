{"version":3,"file":"static/js/580.bac59030.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const noop = (any) => any;\n\nexport { noop };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["Feature","node","_classCallCheck","this","isMounted","_createClass","key","value","noop","any","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","arguments","length","undefined","point","x","y","addPointerInfo","handler","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","addPointerEvent","combineFunctions","a","b","v","pipe","_len","transformers","Array","_key","reduce","distance","Math","abs","PanSession","handlers","_this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","pow","distance2D","offset","timestamp","frameData","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","sync","update","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","window","cancelSync","subtractPoint","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","toFromDifference","mix","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","AnimationType","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","_ref","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","mirrorEasing","easing","p","reverseEasing","easeIn","easeOut","easeInOut","isColorString","testProp","Boolean","isString","singleColorRegex","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","_v$match","match","floatRegex","_v$match2","c","alpha","_defineProperty","parseFloat","rgbUnit","number","round","clamp","clampRgbUnit","rgba","parse","red","green","blue","_ref$alpha","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","hueToRgb","q","t","mixLinearColor","fromExpo","colorTypes","asRGBA","find","invariant","concat","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","colorRegex","replace","apply","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","isArray","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","definition","_definition","isEasingArray","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","state","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","splice","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","restSpeed","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","current","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","_ref$restDelta","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","start","stop","animate","driverControls","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","keyframes$1","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","element","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","fill","iterations","direction","animateStyle","owner","onfinish","set","getFinalKeyframe","cancel","setWithVelocity","timeout","performance","now","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","rotateZ","opacity","backgroundColor","default","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","split","_v$slice$split2","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","indexOf","getZeroUnit","potentialUnitType","getValueTransition","transition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","prev","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","getDefaultTransition","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","animationState","setActive","Drag","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","controls","dragControls","subscribe","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","px","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","register","didUpdate","safeToRemove","setOptions","onExitComplete","globalProjectionState","hasEverUpdated","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","forEach","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","children","isDirty","child","sort","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","SubscriptionManager","subscriptionManager","args","notify","SVGElement","tagName","_this$options","mount","delete","cancelDelay","resizeUnblockUpdate","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","size","mountNodeEarly","clear","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isMotionValue","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","document","querySelector","DocumentProjectionNode","ref","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","shallowCompare","prevLength","isZeroValueString","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","getCurrent","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","resolve","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","valueTarget","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","HandoffAppearAnimations","hasAnimated","appearId","transformProps","sortNodePosition","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","exit","addHoverEvent","callbackName","whileHover","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps2","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","requestAnimationFrame","onViewportEnter","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","_viewport$fallback","threshold","isIntersecting","_this3$node$getProps","onViewportLeave","viewportFallback","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","BoundingBoxDimension","gestureAnimations","inView","tap","focus","hover","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","assign","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","projectionId","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","numVariantProps","variantProps","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","buildHTMLStyles","childSubscription","textContent","renderHTML","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}